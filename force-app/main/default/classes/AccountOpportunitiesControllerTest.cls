@IsTest // Annotation pour indiquer que la classe est une classe de test
private class AccountOpportunitiesControllerTest { // Classe de test AccountOpportunitiesControllerTest


    @TestSetup // Annotation pour indiquer la m√©thode de configuration
    static void setup() { // M√©thode de configuration
        // 1Ô∏è‚É£ Cr√©er et ins√©rer un compte de test
        Account testAccount = TestDataFactory.createTestAccount(); // Cr√©er un compte de test avec TestDataFactory
        insert testAccount; // Ins√©rer le compte dans la base de donn√©es avec insert 

        

        // 2Ô∏è‚É£ Cr√©er et ins√©rer 2 opportunit√©s li√©es √† ce compte de test 
        List<Opportunity> testOpportunities = TestDataFactory.createTestOpportunities(testAccount.Id, 2); // Cr√©er 2 opportunit√©s de test avec TestDataFactory 
       insert testOpportunities;
    }

    @IsTest // Annotation pour indiquer la m√©thode de test 
    
    static void testGetOpportunities() { // M√©thode de test 
        Account testAccount = [SELECT Id from Account WHERE Name = 'Test Account']; 
        
        Test.startTest(); // D√©marrer le contexte de test 
        List<Opportunity> results = AccountOpportunitiesController.getOpportunities(testAccount.Id); // Appeler la m√©thode getOpportunities de AccountOpportunitiesController
        Test.stopTest(); // Arr√™ter le contexte de test 

        System.assertEquals(2, results.size(), 'Should return two opportunity'); // V√©rifier que la liste contient exactement une opportunit√© 
    }
    
     @IsTest 
    static void testGetOpportunitiesByAccountIdWithNullId() { 
        // üéØ Test principal : V√©rifie si la m√©thode retourne les bonnes opportunit√©s

        Test.startTest(); 
        // ‚è≥ D√©marre le contexte de test (permet d‚Äôex√©cuter la m√©thode en conditions r√©elles)

        List<Opportunity> results = AccountOpportunitiesController.getOpportunities(null); 
        // üîç Appelle la m√©thode que l'on veut tester

        Test.stopTest(); 
        // ‚èπÔ∏è Arr√™te le contexte de test

        // ‚úÖ V√©rifications (Assertions)
        System.assertEquals(0, results.size(), 'Should return zero opportunity'); 
        // V√©rifie que la liste contient au moins une opportunit√©


    }
}